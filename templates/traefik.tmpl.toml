# Generated traefik.toml by confd {{datetime}}
debug = {{getv "/debug" "false"}}
logLevel = "{{getv "/log/level" "INFO"}}"
InsecureSkipVerify = {{getv "/insecure/skip" "false"}}
defaultEntryPoints = [{{getv "/default/entrypoints" "\"http\""}}]

[retry]
# Number of attempts
# Default: (number servers in backend) -1
#
{{if exists "/retry" -}}
  attempts = {{getv "/retry"}}
{{end -}}

[lifeCycle]

# Duration to keep accepting requests prior to initiating the graceful
# termination period (as defined by the `graceTimeOut` option). This
# option is meant to give downstream load-balancers sufficient time to
# take Traefik out of rotation.
# Can be provided in a format supported by [time.ParseDuration](https://golang.org/pkg/time/#ParseDuration) or as raw values (digits).
# If no units are provided, the value is parsed assuming seconds.
# The zero duration disables the request accepting grace period, i.e.,
# Traefik will immediately proceed to the grace period.
#
# Optional
# Default: 0
#
# requestAcceptGraceTimeout = "10s"

# Duration to give active requests a chance to finish before Traefik stops.
# Can be provided in a format supported by [time.ParseDuration](https://golang.org/pkg/time/#ParseDuration) or as raw values (digits).
# If no units are provided, the value is parsed assuming seconds.
# Note: in this time frame no new requests are accepted.
#
# Optional
# Default: "10s"
#
graceTimeOut = "{{getv "/grace/timeout" "10s"}}"

[healthcheck]
# Set the default health check interval.#
  interval = "{{getv "/healthcheck/interval" "30s"}}"

[respondingTimeouts]
# readTimeout is the maximum duration for reading the entire request, including the body.
#
# Default: "0s"
#
  readTimeout = "{{getv "/read/timeout" "0s"}}"

# writeTimeout is the maximum duration before timing out writes of the response.
#
# Optional
# Default: "0s"
#
  writeTimeout = "{{getv "/write/timeout" "0s"}}"

# idleTimeout is the maximum duration an idle (keep-alive) connection will remain idle before closing itself.
#
# Optional
# Default: "180s"
#
  idleTimeout = "{{getv "/idle/timeout" "180s"}}"

{{if exists "/access/log"}}{{if eq (getv "/access/log") "true" -}}
[accessLog]
  {{if exists "/access/path" -}}
  filePath = "{{getv "/access/path"}}"
  {{end -}}
  {{if exists "/access/format" -}}
  format = "{{getv "/access/format"}}"
  {{end -}}
{{end}}{{end -}}

[entryPoints]
  [entryPoints.http]
    address = "{{getv "/http/address" ""}}:{{getv "/http/port" "80"}}"
    compress = {{getv "/http/compress" "true"}}

{{if exists "/https/enable"}}{{if eq (getv "/https/enable") "true" -}}
  [entryPoints.https]
    address = "{{getv "/https/address" ""}}:{{getv "/https/port" "443"}}"
    compress = {{getv "/https/compress" "true"}}
      [entryPoints.https.tls]
{{end}}{{end -}}

{{if exists "/ping/enable"}}{{if eq (getv "/ping/enable") "true" -}}
  [entryPoints.ping]
{{if exists "/ping/port" -}}
    address = "{{getv "/ping/address" ""}}:{{getv "/ping/port"}}"
{{else -}}
    address = "{{getv "/ping/address" ""}}:{{getenv "PORT0"}}"
{{end -}}
{{end}}{{end -}}

{{if exists "/api/enable"}}{{if eq (getv "/api/enable") "true" -}}
  [entryPoints.api]
{{if exists "/api/port" -}}
    address = "{{getv "/api/address" ""}}:{{getv "/api/port"}}"
{{else -}}
    address = "{{getv "/api/address" ""}}:{{getenv "PORT1"}}"
{{end -}}
    compress = {{getv "/api/compress" "false"}}
{{end}}{{end -}}

{{if exists "/ping/enable"}}{{if eq (getv "/ping/enable") "true" -}}
[ping]
  entryPoint = "ping"
{{end}}{{end -}}

{{if exists "/api/enable"}}{{if eq (getv "/api/enable") "true" -}}
[api]
  entryPoint = "api"
  # Enabled Dashboard
  dashboard = {{getv "/api/dashboard" "true"}}

  # Enable debug mode.
  # This will install HTTP handlers to expose Go expvars under /debug/vars and
  # pprof profiling data under /debug/pprof.
  # Additionally, the log level will be set to DEBUG.
  #
  debug = {{getv "/api/debug" "false"}}
{{end}}{{end -}}

{{if exists "/marathon/enable" -}}
[marathon]
  # Marathon server endpoint.
  # You can also specify multiple endpoint for Marathon:
  # endpoint = "http://10.241.1.71:8080,10.241.1.72:8080,10.241.1.73:8080"
  #
  endpoint = "{{getv "/marathon/endpoint" "http://marathon.mesos:8080"}}"
  watch = {{getv "/marathon/watch" "true"}}

  # Default domain used.
  # Can be overridden by setting the "traefik.domain" label on an application.
  #
  # Required
  #
  domain = "{{getv "/marathon/domain" "marathon.localhost"}}"

  # Expose Marathon apps by default in Traefik.
  #
  # Optional
  # Default: true
  #
  exposedByDefault = {{getv "/marathon/expose" "true"}}

  # Convert Marathon groups to subdomains.
  # Default behavior: /foo/bar/myapp => foo-bar-myapp.{defaultDomain}
  # with groupsAsSubDomains enabled: /foo/bar/myapp => myapp.bar.foo.{defaultDomain}
  #
  # Optional
  # Default: false
  #
  groupsAsSubDomains = {{getv "/marathon/groups/as/subdomains" "false"}}

  # Enable compatibility with marathon-lb labels.
  #
  # Optional
  # Default: false
  #
  marathonLBCompatibility = {{getv "/marathon/lb/compatibility" "false"}}

  # Enable Marathon basic authentication.
  #
  # Optional
  #
  #    [marathon.basic]
  #    httpBasicAuthUser = "foo"
  #    httpBasicPassword = "bar"

  # TLS client configuration. https://golang.org/pkg/crypto/tls/#Config
  #
  # Optional
  #
  #    [marathon.TLS]
  #    CA = "/etc/ssl/ca.crt"
  #    Cert = "/etc/ssl/marathon.cert"
  #    Key = "/etc/ssl/marathon.key"
  #    InsecureSkipVerify = true

  {{if exists "/marathon/dcos/token" -}}
  # DCOSToken for DCOS environment.
  # This will override the Authorization header.
  #
  # Optional

  dcosToken = "{{getv "/marathon/dcos/token"}}"
  {{- end}}
  # Override DialerTimeout.
  # Amount of time to allow the Marathon provider to wait to open a TCP connection
  # to a Marathon master.
  # Can be provided in a format supported by [time.ParseDuration](https://golang.org/pkg/time/#ParseDuration) or as raw
  # values (digits).
  # If no units are provided, the value is parsed assuming seconds.
  #
  # Optional
  # Default: "60s"
  #
  dialerTimeout = "{{getv "/marathon/dialer/timeout" "60s"}}"

  # Set the TCP Keep Alive interval for the Marathon HTTP Client.
  # Can be provided in a format supported by [time.ParseDuration](https://golang.org/pkg/time/#ParseDuration) or as raw
  # values (digits).
  # If no units are provided, the value is parsed assuming seconds.
  #
  # Optional
  # Default: "10s"
  #
  keepAlive = "{{getv "/marathon/keep/alive" "60s"}}"

  # By default, a task's IP address (as returned by the Marathon API) is used as
  # backend server if an IP-per-task configuration can be found; otherwise, the
  # name of the host running the task is used.
  # The latter behavior can be enforced by enabling this switch.
  #
  # Optional
  # Default: false
  #
  forceTaskHostname = {{getv "/marathon/force/task/hostname" "false"}}

  # Applications may define readiness checks which are probed by Marathon during
  # deployments periodically and the results exposed via the API.
  # Enabling the following parameter causes Traefik to filter out tasks
  # whose readiness checks have not succeeded.
  # Note that the checks are only valid at deployment times.
  # See the Marathon guide for details.
  #
  # Optional
  # Default: false
  #
  respectReadinessChecks = {{getv "/marathon/respect/readiness/checks" "false"}}
{{- end}}

# Metrics definition
[metrics]
  # Enable more detailed statistics.
  [metrics.statistics]

    # Number of recent errors logged.
    #
    # Default: 10
    #
    recentErrors = {{getv "/statistics/recent/errors" "10"}}
{{if exists "/datadog/address" -}}
  # DataDog metrics exporter type
  [metrics.datadog]

    # DataDog's address.
    #
    # Required
    # Default: "localhost:8125"
    #
    address = "{{getv "/datadog/address"}}"

    # DataDog push interval
    #
    # Optional
    #
    pushInterval = "{{getv "/datadog/pushinterval" "10s"}}"
{{end -}}
{{if exists "/prometheus/entrypoint" -}}
  [metrics.prometheus]
    # Name of the related entry point
    #
    # Optional
    # Default: "traefik"
    #
    entryPoint = "{{getv "/prometheus/entrypoint"}}"

    # Buckets for latency metrics
    #
    # Optional
    # Default: [0.1, 0.3, 1.2, 5]
    #
    buckets = [{{getv "/prometheus/buckets" "0.1,0.3,1.2,5.0"}}]
{{end -}}
{{if exists "/influxdb/address" -}}
  [metrics.influxdb]

    # InfluxDB's address.
    #
    # Required
    # Default: "localhost:8089"
    #
    address = "{{getv "/influxdb/address"}}"

    # InfluxDB push interval
    #
    # Optional
    #
    pushinterval = "{{getv "/influxdb/pushinterval" "10s"}}"
{{end -}}
{{if exists "/statsd/address" -}}
  # StatsD metrics exporter type
  [metrics.statsd]

    # StatD's address.
    #
    # Required
    # Default: "localhost:8125"
    #
    address = "{{getv "/statsd/address"}}"

    # StatD push interval
    #
    # Optional
    #
    pushInterval = "{{getv "/statsd/pushinterval" "10s"}}"
{{end -}}
{{if exists "/file/name" -}}
[file]
  filename = "{{getv "/file/name"}}"
  watch = {{getv "/file/watch" "true"}}
{{- end}}

{{if exists "/rancher/enable"}}{{if eq (getv "/rancher/enable") "true" -}}
[rancher]

  # Default domain used.
  # Can be overridden by setting the "traefik.domain" label on an service.
  #
  # Required
  #
  domain = "{{getv "/rancher/domain" "rancher.localhost"}}"

  # Enable watch Rancher changes.
  #
  # Optional
  # Default: true
  #
  watch = {{getv "/rancher/watch" "true"}}

  # Polling interval (in seconds).
  #
  # Optional
  # Default: 15
  #
  refreshSeconds = {{getv "/rancher/refresh" "15"}}

  # Expose Rancher services by default in Traefik.
  #
  # Optional
  # Default: true
  #
  exposedByDefault = {{getv "/rancher/expose" "true"}}

  # Filter services with unhealthy states and inactive states.
  #
  # Optional
  # Default: false
  #
  enableServiceHealthFilter = {{getv "/rancher/healthcheck" "true"}}

  {{- if exists "/rancher/filename"}}
  #
  # Optional
  #
  filename = "{{getv "/rancher/filename"}}"

  # Override template version
  # For advanced users :)
  #
  # Optional
  # - "1": previous template version (must be used only with older custom templates, see "filename")
  # - "2": current template version (must be used to force template version when "filename" is used)
  #
  # templateVersion = 2
  {{end -}}

  {{if exists "/rancher/method"}}{{if eq (getv "/rancher/method") "api" -}}
  [rancher.api]
    Endpoint = "{{getv "/rancher/cattle/url"}}"
    AccessKey = "{{getv "/rancher/cattle/access/key"}}"
    SecretKey = "{{getv "/rancher/cattle/secret/key"}}"
  {{end}}{{end -}}
  {{if exists "/rancher/method"}}{{if eq (getv "/rancher/method") "metadata" -}}
  [rancher.metadata]

  # Poll the Rancher metadata service for changes every `rancher.refreshSeconds`.
  # NOTE: this is less accurate than the default long polling technique which
  # will provide near instantaneous updates to Traefik
  #
  # Optional
  # Default: false
  #
  intervalPoll = {{getv "/rancher/intervalpoll" "false"}}

  # Prefix used for accessing the Rancher metadata service.
  #
  # Optional
  # Default: "/latest"
  #
  prefix = "{{getv "/rancher/prefix" "/latest"}}"
  {{end}}{{end -}}
{{- end}}{{- end}}

{{- if exists "/acme/enable"}}{{if eq (getv "/acme/enable") "true" -}}
# Enable ACME (Let's Encrypt): automatic SSL.
[acme]

  # Email address used for registration.
  #
  # Required
  #
  email = "{{getv "/acme/email"}}"

  # File or key used for certificates storage.
  #
  # Required
  #
  storage = "{{getv "/acme/storage" "acme.json"}}"
  # or `storage = "traefik/acme/account"` if using KV store.

  # Entrypoint to proxy acme apply certificates to.
  #
  # Required
  #
  entryPoint = "{{getv "/acme/entrypoint" "https"}}"

  # Deprecated, replaced by [acme.dnsChallenge].
  #
  # Optional.
  #
  # dnsProvider = "digitalocean"

  # Deprecated, replaced by [acme.dnsChallenge.delayBeforeCheck].
  #
  # Optional
  # Default: 0
  #
  # delayDontCheckDNS = 0

  # If true, display debug log messages from the acme client library.
  #
  # Optional
  # Default: false
  #
  # acmeLogging = true

  # Enable certificate generation on frontends Host rules.
  #
  # Optional
  # Default: false
  #
  onHostRule = {{getv "/acme/onhostrule" "false"}}

  # CA server to use.
  # - Uncomment the line to run on the staging let's encrypt server.
  # - Leave comment to go to prod.
  #
  # Optional
  # Default: "https://acme-v02.api.letsencrypt.org/directory"
  #
  # caServer = "https://acme-staging-v02.api.letsencrypt.org/directory"

  # Domains list.
  # Only domains defined here can generate wildcard certificates.
  #
  # [[acme.domains]]
  #   main = "local1.com"
  #   sans = ["test1.local1.com", "test2.local1.com"]
  # [[acme.domains]]
  #   main = "local2.com"
  #   sans = ["test1.local2.com", "test2.local2.com"]
  # [[acme.domains]]
  #   main = "local3.com"
  # [[acme.domains]]
  #   main = "local4.com"

  # Use a HTTP-01 acme challenge.
  #
  # Optional but recommend
  #
  [acme.httpChallenge]

    # EntryPoint to use for the HTTP-01 challenges.
    #
    # Required
    #
    entryPoint = "http"

  # Use a DNS-01/DNS-01 acme challenge rather than HTTP-01 challenge.
  # Note : Mandatory for wildcard certificates generation.
  #
  # Optional
  #
  # [acme.dnsChallenge]

    # Provider used.
    #
    # Required
    #
    # provider = "digitalocean"

    # By default, the provider will verify the TXT DNS challenge record before letting ACME verify.
    # If delayBeforeCheck is greater than zero, avoid this & instead just wait so many seconds.
    # Useful if internal networks block external DNS queries.
    #
    # Optional
    # Default: 0
    #
    # delayBeforeCheck = 0
{{end}}{{end -}}

{{- if exists "/mesos/enable"}}{{if eq (getv "/mesos/enable") "true" -}}

[mesos]
  # Mesos server endpoint.
  # You can also specify multiple endpoint for Mesos:
  # endpoint = "192.168.35.40:5050,192.168.35.41:5050,192.168.35.42:5050"
  # endpoint = "zk://192.168.35.20:2181,192.168.35.21:2181,192.168.35.22:2181/mesos"
  #
  # Required
  endpoint = "{{getv "/mesos/endpoint" "http://leader.mesos:5050"}}"

  # Enable watch Mesos changes.
  #
  # Optional
  # Default: true
  #
  watch = {{getv "/mesos/watch" "true"}}

  # Default domain used.
  # Can be overridden by setting the "traefik.domain" label on an application.
  #
  # Required
  #
  domain = "{{getv "/mesos/domain" "mesos.localhost"}}"

  # Expose Mesos apps by default in Traefik.
  #
  # Optional
  # Default: true
  #
  exposedByDefault = {{getv "/mesos/expose" "false"}}

  {{- if exists "/mesos/filename"}}
  # Override default configuration template.
  #
  # Optional
  #
  filename = "{{getv "/mesos/filename"}}"

  # Override template version
  # For advanced users :)
  #
  # Optional
  # - "1": previous template version (must be used only with older custom templates, see "filename")
  # - "2": current template version (must be used to force template version when "filename" is used)
  #
  # templateVersion = 2
  {{end -}}

  # TLS client configuration. https://golang.org/pkg/crypto/tls/#Config
  #
  # Optional
  #
  # [mesos.TLS]
  # insecureSkipVerify = true

  # Zookeeper timeout (in seconds).
  #
  # Optional
  # Default: 30
  #
  zkDetectionTimeout = {{getv "/mesos/zk/timeout" "30"}}

  # Polling interval (in seconds).
  #
  # Optional
  # Default: 30
  #
  refreshSeconds = {{getv "/mesos/refresh" "30"}}

  # IP sources (e.g. host, docker, mesos, netinfo).
  #
  # Optional
  #
  ipSources = "{{getv "/mesos/ip/sources" "host"}}"

  # HTTP Timeout (in seconds).
  #
  # Optional
  # Default: 30
  #
  stateTimeoutSecond = {{getv "/mesos/timeout" "30"}}

  # Convert groups to subdomains.
  # Default behavior: /foo/bar/myapp => foo-bar-myapp.{defaultDomain}
  # with groupsAsSubDomains enabled: /foo/bar/myapp => myapp.bar.foo.{defaultDomain}
  #
  # Optional
  # Default: false
  #
  groupsAsSubDomains = {{getv "/mesos/groups/as/subdomains" "false"}}
{{end}}{{end -}}

{{- if exists "/k8s/enable"}}{{if eq (getv "/k8s/enable") "true" -}}

  [kubernetes]
  # Kubernetes server endpoint.
  #
  # Optional for in-cluster configuration, required otherwise.
  # Default: empty
  #
  {{if exists "/k8s/endpoint" -}}
    endpoint = "{{getv "/k8s/endpoint"}}"
  {{end -}}

  # Bearer token used for the Kubernetes client configuration.
  #
  # Optional
  # Default: empty
  {{if exists "/k8s/token" -}}
    token = "{{getv "/k8s/token"}}"
  {{end -}}

  # Path to the certificate authority file.
  # Used for the Kubernetes client configuration.
  #
  # Optional
  # Default: empty
  #
  {{if exists "/k8s/ca" -}}
    certAuthFilePath = "{{getv "/k8s/ca"}}"
  {{end -}}

  # Array of namespaces to watch.
  #
  # Optional
  # Default: all namespaces (empty array).
  #
  namespaces = [{{getv "/k8s/namespaces" ""}}]

  # Ingress label selector to filter Ingress objects that should be processed.
  #
  # Optional
  # Default: empty (process all Ingresses)
  #
  {{if exists "/k8s/labelselector" -}}
  labelselector = "{{getv "/k8s/labelselector"}}"
  {{end -}}

  # Value of `kubernetes.io/ingress.class` annotation that identifies Ingress objects to be processed.
  # If the parameter is non-empty, only Ingresses containing an annotation with the same value are processed.
  # Otherwise, Ingresses missing the annotation, having an empty value, or the value `traefik` are processed.
  #
  # Note : `ingressClass` option must begin with the "traefik" prefix.
  #
  # Optional
  # Default: empty
  #
  # ingressClass = "traefik-internal"
  {{if exists "/k8s/ingress/class" -}}
  ingressClass = "{{getv "/k8s/ingress/class"}}"
  {{end -}}

  # Disable PassHost Headers.
  #
  # Optional
  # Default: false
  #
  disablePassHostHeaders = {{getv "/k8s/disable/pass/host/headers" "false"}}

  # Enable PassTLSCert Headers.
  #
  # Optional
  # Default: false
  #
  enablePassTLSCert = {{getv "/k8s/enable/pass/tls/cert" "false"}}

  # Override default configuration template.
  #
  # Optional
  # Default: <built-in template>
  #
  {{if exists "/k8s/filename" -}}
  filename = "{{getv "/k8s/filename"}}"
  {{end -}}
{{end}}{{end -}}
